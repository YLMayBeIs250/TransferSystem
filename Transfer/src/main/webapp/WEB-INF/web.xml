<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name></display-name>



    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring/applicationContext-*.xml</param-value>
    </context-param>

  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


    <!--例:spring监听器-->
    <listener>		<!--用来设定Listener接口-->
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><!--定义Listener的类名称-->
    </listener>
    <!-- 防止Spring内存溢出监听器  -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

  <servlet>		<!--用来声明一个servlet的数据 -->
    <servlet-name>SpringMVC</servlet-name>	<!--指定servlet的名称-->
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <!--指定servlet的类名称,这里配置了前端控制器-->
    <init-param><!--用来定义参数,可有多个init-param。在servlet类中通过getInitParamenter(String name)方法访问初始化参数    -->
      <param-name>contextConfigLocation</param-name>	<!--参数名称-->
      <param-value>classpath:spring/spring_mvc.xml</param-value>	<!--参数值-->
    </init-param>
    <load-on-startup>1</load-on-startup><!--当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet.-->
  </servlet>
  <servlet-mapping><!--用来定义servlet所对应的URL-->
    <servlet-name>SpringMVC</servlet-name>	<!--指定servlet的名称-->
    <url-pattern>/</url-pattern>		<!--指定servlet所对应的URL-->
  </servlet-mapping>

<!--由于在spring中配置了静态资源文件，所以以下可以省略-->
<!--  <servlet-mapping>
    <servlet-name>SpringMVC</servlet-name>
    <url-pattern>*.css</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SpringMVC</servlet-name>
    <url-pattern>*.gif</url-pattern>

  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SpringMVC</servlet-name>
    <url-pattern>*.jpg</url-pattern>
  </servlet-mapping>

    <servlet-mapping>
            <servlet-name>SpringMVC</servlet-name>
            <url-pattern>*.png</url-pattern>
    </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SpringMVC</servlet-name>
    <url-pattern>*.js</url-pattern>
  </servlet-mapping>-->

    <session-config><!--如果某个会话在一定时间未被访问，则服务器可以扔掉以节约内存-->
        <session-timeout>12</session-timeout>
    </session-config>


    <welcome-file-list>
      <!--<welcome-file>test/addAdmin.jsp</welcome-file>-->
      <welcome-file>pages/jsp/index.jsp</welcome-file>
    </welcome-file-list>



</web-app>